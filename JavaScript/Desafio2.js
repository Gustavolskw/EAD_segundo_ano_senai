// Nesse exerc√≠cio, voc√™ est√° livre para escolher os nomes para suas vari√°veis e
// fun√ß√µes! üòÑ

// Crie uma fun√ß√£o que receba dois argumentos e retorne a soma dos mesmos.

function soma(a, b) {
    return a + b;
}



// Declare uma vari√°vel que receba a invoca√ß√£o da fun√ß√£o criada acima, 
// passando dois n√∫meros quaisquer por argumento, e somando `5` ao resultado
// retornado da fun√ß√£o.

let somaDosValores = soma(2, 4) + 5;



// Qual o valor atualizado dessa vari√°vel?

11


// Declare uma nova vari√°vel, sem valor.

let semValor;



/*
Crie uma fun√ß√£o que adicione um valor √† vari√°vel criada acima, e retorne a
string:
O valor da vari√°vel agora √© VALOR.
Onde VALOR √© o novo valor da vari√°vel.
*/

function adicionaValor(recVar, val) {
    return `O valor da vari√°vel agora √© ${recVar = val}.`
}

// Invoque a fun√ß√£o criada acima.

console.log(adicionaValor(semValor, 5));

// Qual o retorno da fun√ß√£o? (Use coment√°rios de bloco).


/*O valor da vari√°vel agora √© 5.*/


/*
Crie uma fun√ß√£o com as seguintes caracter√≠sticas:
1. A fun√ß√£o deve receber 3 argumentos;
2. Se qualquer um dos tr√™s argumentos n√£o estiverem preenchidos, a fun√ß√£o
deve retornar a string:
Preencha todos os valores corretamente!
3. O retorno da fun√ß√£o deve ser a multiplica√ß√£o dos 3 argumentos, somando
`2` ao resultado da multiplica√ß√£o.
*/

function multiplicaESomaDois(a, b, c) {
    if (!a || !b || !c) {
        return "Preencha todos os valores corretamente!";
    }
    return (a * b * c) + 2;
}




// Invoque a fun√ß√£o criada acima, passando s√≥ dois n√∫meros como argumento.

console.log(multiplicaESomaDois(5, 6));


// Qual o resultado da invoca√ß√£o acima? (Use coment√°rios para mostrar o valor retornado).

/*Preencha todos os valores corretamente!*/


// Agora invoque novamente a fun√ß√£o criada acima, mas passando todos os tr√™s argumentos necess√°rios.

console.log(multiplicaESomaDois(5, 7, 6));


// Qual o resultado da invoca√ß√£o acima? (Use coment√°rios para mostrar o valor retornado).

/*212*/


/*
Crie uma fun√ß√£o com as seguintes caracter√≠sticas:
1. A fun√ß√£o deve receber 3 argumentos.
2. Se somente um argumento for passado, retorne o valor do argumento.
3. Se dois argumentos forem passados, retorne a soma dos dois argumentos.
4. Se todos os argumentos forem passados, retorne a soma do primeiro com o
segundo, e o resultado, dividido pelo terceiro.
5. Se nenhum argumento for passado, retorne o valor booleano `false`.
6. E ainda, se nenhuma das condi√ß√µes acima forem atendidas, retorne `null`.
*/


function randomFunctionWithRandomReturn(a, b, c) {
    if (!a && !b && !c) {
        return false;
    } else if (a && !b && !c) {
        return a;
    } else if (a && b && !c) {
        return a + b;
    } else if (a && b && c) {
        return (a + b) / c;
    } else {
        return null;
    }
}

// Invoque a fun√ß√£o acima utilizando todas as possibilidades (com nenhum
// argumento, com um, com dois e com tr√™s.) Coloque um coment√°rio de linha
// ao lado da fun√ß√£o com o resultado de cada invoca√ß√£o.

console.log(randomFunctionWithRandomReturn()); //false 
console.log(randomFunctionWithRandomReturn(7)) //7
console.log(randomFunctionWithRandomReturn(2, 17)) //19
console.log(randomFunctionWithRandomReturn(3, 6, 8)) //1.125
console.log(randomFunctionWithRandomReturn(null, 6, null)) // null
